;--------------------------------------------------
;下で長々と記述している人称管理関数@CNAMEのTARGET以外も指定できる版
;ARGに発言者の番号を入れてください
;--------------------------------------------------
@CNAMET(ARG, ARGS, ARGS:1, ARGS:2, ARGS:3, ARGS:4)
#FUNCTIONS
#DIM MEMO_TARGET
#DIM MEMO_ASSI
#DIM MEMO_PLAYER

MEMO_TARGET = TARGET
MEMO_ASSI = ASSI
MEMO_PLAYER = PLAYER

SELECTCASE ARGS
CASE "対象"
	ASSI = TARGET
	TARGET = ARG
	LOCALS = %CNAME("助手", ARGS:1, ARGS:2, ARGS:3, ARGS:4)%
CASE "二人称：対象"
	PLAYER = TARGET
	TARGET = ARG
	LOCALS = %CNAME("二人称", ARGS:1, ARGS:2, ARGS:3, ARGS:4)%
CASEELSE
	TARGET = ARG
	LOCALS = %CNAME(ARGS, ARGS:1, ARGS:2, ARGS:3, ARGS:4)%
ENDSELECT
TARGET = MEMO_TARGET
ASSI = MEMO_ASSI
RETURNF LOCALS

;--------------------------------------------------
;TARGETの人称管理関数@CNAME
;ARGSに何人称か、または誰への呼びかけかを入れる。
;ARGS:1〜にはどもり、甘え、かな、〜など変化をつけたい内容を入れる
;基本的な人称はPERSON_DEFで設定し、特殊なケースの呼び名はPERSONを用いて設定する
;具体的には、PERSONが設定されている場合にはPERSON、そうでない場合にはPERSON_DEFを用いることになる
;また、CEVENTを用いた呼び名変更はPERSONが設定されている場合には無視されるので注意
;--------------------------------------------------
@CNAME(ARGS, ARGS:1, ARGS:2, ARGS:3, ARGS:4)
#FUNCTIONS
#DIM LCOUNT
#DIM LCOUNT2
#DIM PLAYER_MEMO
;呼び名
#DIMS PERSON
;よびな
#DIMS KANA
;基本呼び名
#DIMS PERSON_DEF
;基本よびな
#DIMS KANA_DEF

PLAYER_MEMO = PLAYER

;基本呼び名のリセット
VARSET PERSON_DEF
VARSET KANA_DEF

;普段とは異なる呼び名のリセット
VARSET PERSON
VARSET KANA

STR:基本呼び名 = 
;TRYCALLFORMさえ使えればなー
;追加したキャラの番号に応じて増やす
SELECTCASE NO:TARGET
CASE 1
	STR:基本呼び名 = %CNAME_K1(ARGS)%
CASE 2
	STR:基本呼び名 = %CNAME_K2(ARGS)%
CASE 3
	STR:基本呼び名 = %CNAME_K3(ARGS)%
CASE 4
	STR:基本呼び名 = %CNAME_K4(ARGS)%
CASE 5
	STR:基本呼び名 = %CNAME_K5(ARGS)%
CASE 6
	STR:基本呼び名 = %CNAME_K6(ARGS)%
CASE 7
	STR:基本呼び名 = %CNAME_K7(ARGS)%
CASE 8
	STR:基本呼び名 = %CNAME_K8(ARGS)%
CASE 9
	STR:基本呼び名 = %CNAME_K9(ARGS)%
CASE 10
	STR:基本呼び名 = %CNAME_K10(ARGS)%
CASE 11
	STR:基本呼び名 = %CNAME_K11(ARGS)%
CASE 12
	STR:基本呼び名 = %CNAME_K12(ARGS)%
CASE 13
	STR:基本呼び名 = %CNAME_K13(ARGS)%
CASE 14
	STR:基本呼び名 = %CNAME_K14(ARGS)%
CASE 15
	STR:基本呼び名 = %CNAME_K15(ARGS)%
CASE 16
	STR:基本呼び名 = %CNAME_K16(ARGS)%
CASE 17
	STR:基本呼び名 = %CNAME_K17(ARGS)%
CASE 18
	STR:基本呼び名 = %CNAME_K18(ARGS)%
CASE 19
	STR:基本呼び名 = %CNAME_K19(ARGS)%
CASE 20
	STR:基本呼び名 = %CNAME_K20(ARGS)%
CASE 21
	STR:基本呼び名 = %CNAME_K21(ARGS)%
CASE 22
	STR:基本呼び名 = %CNAME_K22(ARGS)%
CASE 23
	STR:基本呼び名 = %CNAME_K23(ARGS)%
CASE 24
	STR:基本呼び名 = %CNAME_K24(ARGS)%
CASE 25
	STR:基本呼び名 = %CNAME_K25(ARGS)%
CASE 26
	STR:基本呼び名 = %CNAME_K26(ARGS)%
CASE 27
	STR:基本呼び名 = %CNAME_K27(ARGS)%
CASE 28
	STR:基本呼び名 = %CNAME_K28(ARGS)%
ENDSELECT

;呼び名が設定されている
IF STR:基本呼び名 != ""
	VARSET LOCALS
	SPLIT STR:基本呼び名, "_", LOCALS
	PERSON_DEF = %LOCALS%
	KANA_DEF = %LOCALS:1%
ELSE
	SELECTCASE ARGS
	CASE "一人称"
		PERSON_DEF = 私
		KANA_DEF = わたし
	CASE "二人称"
		;相手が主人
		IF PLAYER == MASTER
			PERSON_DEF = あなた
			KANA_DEF = あなた
		;相手が主人ではない
		ELSE
			PERSON_DEF = あなた
			KANA_DEF = あなた
		ENDIF
	CASE "主人"
		PERSON_DEF = ご主人様
		KANA_DEF = ごしゅじんさま
	CASE "助手"
		PERSON_DEF = %CALLNAME:ASSI%さん
		KANA_DEF = %CALLNAME:ASSI%さん
	CASEELSE
		;ARGSにキャラ名が入れられてる場合にはキャラへの呼び方なのでチェック
		FOR LCOUNT, 1, 63
			;LCOUNT番のキャラが存在するか判定
			SIF GETBIT(FLAG:キャラ存在, LCOUNT) == 0
				CONTINUE
			SELECTCASE ARGS
			CASE CSVCALLNAME(LCOUNT)
				IF FINDCHARA(NO, LCOUNT) > 0
					PERSON_DEF = %CALLNAME:FINDCHARA(NO, LCOUNT)%
					KANA_DEF = %CALLNAME:FINDCHARA(NO, LCOUNT)%
				ENDIF
			ENDSELECT
		NEXT
	ENDSELECT
ENDIF


;ここまでで人称の変化が起きていない場合には、人称変更をしているならそれを、していないならデフォの人称を使う
IF PERSON == ""
	PERSON = %PERSON_DEF%
	KANA = %KANA_DEF%

	SELECTCASE ARGS
	CASE "一人称"
		IF PLAYER == MASTER && CEVENTS("一人称主人") != ""
			PERSON = %CEVENTS("一人称主人")%
			KANA = %CEVENTS("一人称主人かな")%
		ELSEIF PLAYER == ASSI && CEVENTS("一人称助手") != ""
			PERSON = %CEVENTS("一人称助手")%
			KANA = %CEVENTS("一人称助手かな")%
		ELSEIF CEVENTS("一人称") != ""
			PERSON = %CEVENTS("一人称")%
			KANA = %CEVENTS("一人称かな")%
		ENDIF
	CASE "二人称"
		IF PLAYER == MASTER && CEVENTS("二人称主人") != ""
			PERSON = %CEVENTS("二人称主人")%
			KANA = %CEVENTS("二人称主人かな")%
		ELSEIF PLAYER == ASSI && CEVENTS("二人称助手") != ""
			PERSON = %CEVENTS("二人称助手")%
			KANA = %CEVENTS("二人称助手かな")%
		ELSEIF CEVENTS("二人称") != ""
			PERSON = %CEVENTS("二人称")%
			KANA = %CEVENTS("二人称かな")%
		ENDIF
	CASE "主人"
		IF CEVENTS("二人称主人") != ""
			PERSON = %CEVENTS("二人称主人")%
			KANA = %CEVENTS("二人称主人かな")%
		ELSEIF CEVENTS("二人称") != ""
			PERSON = %CEVENTS("二人称")%
			KANA = %CEVENTS("二人称かな")%
		ENDIF
	CASE "助手"
		IF CEVENTS("二人称助手") != ""
			PERSON = %CEVENTS("二人称助手")%
			KANA = %CEVENTS("二人称助手かな")%
		ELSEIF CEVENTS("二人称") != ""
			PERSON = %CEVENTS("二人称")%
			KANA = %CEVENTS("二人称かな")%
		ENDIF
	ENDSELECT
ENDIF


;以下で細かい変化をつける

;ひらがな化
FOR LCOUNT, 1, 5
	SELECTCASE ARGS:LCOUNT
	CASE "かな", "・"
		PERSON = %KANA%
	ENDSELECT
NEXT

;お・に・い・さん（ひらがな化は上で既に完了）
FOR LCOUNT, 1, 5
	SIF ARGS:LCOUNT != "・"
		CONTINUE

	FOR LCOUNT2, 0, 20
		SIF STRLENS(PERSON) <= 2 + LCOUNT2 * 4
			BREAK
		PERSON = %SUBSTRING(PERSON, 0, 2 + LCOUNT2 * 4)%・%SUBSTRING(PERSON, 2 + LCOUNT2 * 4, -1)%
	NEXT
	SELECTCASE PERSON
	;特殊変化
	CASE "せ・ん・せ・い"
		PERSON = せ・ん・せ
	CASEELSE
		SELECTCASE SUBSTRING(PERSON, MAX(STRLENS(PERSON) - 6, 0), -1)
		CASE "さ・ん"
			PERSON = %SUBSTRING(PERSON, 0, STRLENS(PERSON) - 6)%さん
		CASE "く・ん"
			PERSON = %SUBSTRING(PERSON, 0, STRLENS(PERSON) - 6)%くん
		CASEELSE
			SELECTCASE SUBSTRING(PERSON, MAX(STRLENS(PERSON) - 10, 0), -1)
			CASE "ち・ゃ・ん"
				PERSON = %SUBSTRING(PERSON, 0, STRLENS(PERSON) - 10)%ちゃん
			ENDSELECT
		ENDSELECT
	ENDSELECT
NEXT
;甘え(おぬしとかみたいな甘える事が異常な呼び方もあるので個別管理)
FOR LCOUNT, 1, 5
	SIF ARGS:LCOUNT != "甘え"
		CONTINUE

	SELECTCASE PERSON
	CASE "マスター"
		PERSON = マスタぁ
	CASE "あなた", "ぼうや", "ママ", "まま", "パパ", "ぱぱ"
		PERSON = %PERSON%ぁ
	CASE "あたし", "アタシ", "あるじ", "わたし", "ワタシ", "わたくし", "ワタクシ"
		PERSON = %PERSON%ぃ
	CASE "僕", "ぼく", "ボク"
		PERSON = %PERSON%ぅ
	CASE "おれ", "オレ", "母上", "ははうえ", "父上", "ちちうえ", "姉上", "あねうえ", "兄上", "あにうえ"
		PERSON = %PERSON%ぇ
	CASE "せんせい"
		PERSON = せんせぇ
	CASE "先輩"
		PERSON = せんぱぁい
	;甘え口調が無い
	CASE "貴方", "貴女", "君", "きみ", "キミ", "マスター", "ますたー"
	CASEELSE
		SELECTCASE SUBSTRING(PERSON, MAX(STRLENS(PERSON) - 2, 0), -1)
		CASE "様"
			PERSON = %PERSON%ぁ
		CASE "君"
			SIF STRLENS(PERSON) >= 3
				PERSON = %SUBSTRING(PERSON, 0, STRLENS(PERSON) - 2)%くぅん
		CASEELSE
			SELECTCASE SUBSTRING(PERSON, MAX(STRLENS(PERSON) - 4, 0), -1)
			CASE "先生"
				PERSON = %SUBSTRING(PERSON, 0, STRLENS(PERSON) - 4)%せんせぇ
			CASE "さま"
				PERSON = %PERSON%ぁ
			CASE "さん"
				PERSON = %SUBSTRING(PERSON, 0, STRLENS(PERSON) - 4)%さぁん
			CASE "くん"
				PERSON = %SUBSTRING(PERSON, 0, STRLENS(PERSON) - 4)%くぅん

			CASEELSE
				SELECTCASE SUBSTRING(PERSON, MAX(STRLENS(PERSON) - 6, 0), -1)
				CASE "ちゃん"
					PERSON = %SUBSTRING(PERSON, 0, STRLENS(PERSON) - 6)%ちゃぁん
				CASE "しゃま"
					PERSON = %PERSON%ぁ
				ENDSELECT
			ENDSELECT
		ENDSELECT
	ENDSELECT
NEXT

;音引きとか波ダッシュとか
FOR LCOUNT, 1, 5
	SELECTCASE ARGS:LCOUNT
	CASE "ー", "〜", "、", "…", "……"
		SELECTCASE SUBSTRING(PERSON, MAX(STRLENS(PERSON) - 2, 0), -1)
		CASE "ん"
			PERSON = %SUBSTRING(PERSON, 0, STRLENS(PERSON) - 2)%%ARGS:LCOUNT%ん
		ENDSELECT
	ENDSELECT
NEXT
;どもり
FOR LCOUNT, 1, 5
	SIF STRLENS(KANA) <= 2
		BREAK
	SIF ARGS:LCOUNT != "どもり"
		CONTINUE

	PERSON = %SUBSTRING(KANA, 0, 2)%、%PERSON%
NEXT

PLAYER = PLAYER_MEMO

RETURNF PERSON


